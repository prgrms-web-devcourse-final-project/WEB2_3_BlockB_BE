server:
  port: 8080

spring:
  application:
    name: earthTalk
  config:
    import: classpath:application-news.yml
    activate:
      on-profile: dev
  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: update # 엔티티로 등록된 클래스와 매핑되는 테이블 자동 생성 주석해도 됩니다.
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
        # 자바에서 카멜로 필드 작성하면 DB에 스네이크로 기록
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        dialect: org.hibernate.dialect.MariaDBDialect

  security:
    oauth2:
      client:
        registration:
          google:
            client-name: google
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: ${GOOGLE_CLIENT_REDIRECT_URL}
            authorization-grant-type: authorization_code
            scope: profile, email
          naver:
            client-name: naver
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            redirect-uri: ${NAVER_CLIENT_REDIRECT_URL}
            authorization-grant-type: authorization_code
            scope: email, profile_image
          kakao:
            client-name: kakao
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            redirect-uri: ${KAKAO_CLIENT_REDIRECT_URL}
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            scope: profile_nickname, profile_image
        provider:
          naver:
            authorization-uri: ${NAVER_OAUTH_API_URL}
            token-uri: ${NAVER_RESOURCE_API_URL}
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
          kakao:
            authorization-uri: ${KAKAO_OAUTH_API_URL}
            token-uri: ${KAKAO_RESOURCE_API_URL}
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

logging:
  level:
    org.mariadb.jdbc: info

springdoc:
  use-fqn: true
  swagger-ui:
    groups-order: DESC # 그룹 순서를 내림차순으로 설정
    tags-sorter: alpha # 태그를 알파벳 순으로 정렬
    operations-sorter: method # HTTP 메서드(GET, POST 등) 순서로 정렬
    disable-swagger-default-url: true # 기본 Swagger URL 비활성화
    display-request-duration: true # 요청의 처리 시간을 표시
    defaultModelsExpandDepth: 2 # 기본 모델의 확장 깊이 설정
    defaultModelExpandDepth: 2 # 단일 모델의 확장 깊이 설정
  api-docs:
    path: /api-docs # API 문서 경로 설정
  default-consumes-media-type: application/json
  default-produces-media-type: application/json
  writer-with-default-pretty-printer: true # JSON을 예쁘게 출력
#  paths-to-match:
#    - /api/v1/** # 특정 경로의 API만 매칭

jwt:
  secret-key: ${SECRET_KEY}
  access-expire-time: ${ACCESS_EXPIRE_TIME}
  refresh-expire-time: ${REFRESH_EXPIRE_TIME}

google:
  client:
    id: ${GOOGLE_CLIENT_ID}
    secret: ${GOOGLE_CLIENT_SECRET}
    redirect-url: ${GOOGLE_CLIENT_REDIRECT_URL}
  oauth:
    api:
      url: ${GOOGLE_OAUTH_API_URL}
  resource:
    api:
      url: ${GOOGLE_RESOURCE_API_URL}